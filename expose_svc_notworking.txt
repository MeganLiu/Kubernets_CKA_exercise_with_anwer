
#####
nginx-pod exposed to service nginx-service ,

when port-forwarded kubectl port-forward svc/nginx-service 8080:80 it is stuck, so unable to access application curl http://localhost:8080



####

Check If the Service Has Endpoints
Run:

sh
Copy
Edit
kubectl get endpoints nginx-service
✅ Expected Output:

nginx
Copy
Edit
NAME            ENDPOINTS           AGE
nginx-service   10.244.X.X:80       19m
❌ If the endpoints list is empty, the service is not routing to the pod.
Fix this by checking pod labels.

3️⃣ Check If the Service Selector Matches the Pod
Run:

sh
Copy
Edit
kubectl get pods --show-labels
Check service selectors:

sh
Copy
Edit
kubectl describe svc nginx-service | grep Selector
✅ Ensure the pod labels match the service selector.
❌ If they don’t match, edit the service:

###
controlplane $ k get endpoints  nginx-service
NAME            ENDPOINTS   AGE
nginx-service   <none>      22m

###
ontrolplane $ kdes svc nginx-service |  grep Selector
Selector:                 app=nginx-pod

controlplane $ kgpd --show-labels
NAME        READY   STATUS    RESTARTS   AGE   LABELS
nginx-pod   1/1     Running   0          23m   <none>

SO : there is no matched lable for pod

The issue is that your pod does not have any labels, but your service is selecting app=nginx-pod.

Since kubectl get pods --show-labels shows <none> for labels, the service cannot find the pod, which is why curl is failing.

✅ Fix: Add the Correct Label to the Pod
To make the service work, add the missing label to the pod:


kubectl label pod nginx-pod app=nginx-pod
Verify:

sh
Copy
Edit
kubectl get pods --show-labels





